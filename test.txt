// /frontend/seller/login.js

(() => {
  const form = document.getElementById("login-form");
  const userEl = document.getElementById("username");
  const passEl = document.getElementById("password");
  const errEl  = document.getElementById("error-msg");

  if (!form || !userEl || !passEl) return;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    errEl.classList.add("hidden");
    errEl.textContent = "";

    const username = userEl.value.trim();
    const password = passEl.value.trim();
    if (!username || !password) {
      errEl.textContent = "Completa usuario y contraseÃ±a.";
      errEl.classList.remove("hidden");
      return;
    }

    try {
      // ðŸš© Enviar como x-www-form-urlencoded (lo que espera OAuth2PasswordRequestForm)
      const body = new URLSearchParams({ username, password });

      const res = await fetch("http://127.0.0.1:8000/user/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        body
      });

      const data = await res.json().catch(() => ({}));

      if (!res.ok) {
        // Mostrar error bonito
        let message = "Credenciales invÃ¡lidas.";
        if (data?.detail) {
          if (Array.isArray(data.detail)) {
            message = data.detail.map(d => d.msg || d.detail || JSON.stringify(d)).join(" / ");
          } else if (typeof data.detail === "string") {
            message = data.detail;
          }
        }
        errEl.textContent = message;
        errEl.classList.remove("hidden");
        return;
        }

      // Esperamos algo tipo: { access_token: "...", token_type: "bearer", role: "seller" }
      const { access_token, token_type, role } = data;

      if (!access_token) {
        errEl.textContent = "Respuesta inesperada del servidor.";
        errEl.classList.remove("hidden");
        return;
      }

      // Guardar token y role
      localStorage.setItem("auth_token", access_token);
      localStorage.setItem("token_type", token_type || "bearer");
      localStorage.setItem("user_role", role || "");

      // Redirigir al dashboard del seller
      window.location.href = "/frontend/seller/dashboard.html";
    } catch (err) {
      console.error(err);
      errEl.textContent = "No se pudo conectar con el servidor.";
      errEl.classList.remove("hidden");
    }
  });
})();