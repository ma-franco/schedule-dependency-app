import os, uuid
from flask import Flask, request, jsonify, send_from_directory
from werkzeug.utils import secure_filename

# App WSGI
application = Flask(__name__)

# Límite y carpeta de subidas
application.config["MAX_CONTENT_LENGTH"] = 5 * 1024 * 1024  # 5 MB
UPLOAD_DIR = os.path.join(os.path.dirname(__file__), "static", "uploads")
os.makedirs(UPLOAD_DIR, exist_ok=True)

@application.get("/")
def root():
    return "OK: Flask + Passenger (WSGI puro)"

@application.get("/ping")
def ping():
    return jsonify(ok=True)

@application.post("/user/login")
def user_login():
    # Acepta x-www-form-urlencoded o JSON
    data = request.form or request.get_json(silent=True) or {}
    username = (data.get("username") or "").strip()
    password = (data.get("password") or "").strip()

    # Demo simple: cámbialo por tu lógica real
    if username == "admin" and password == "admin":
        return jsonify(access_token="demo-token", token_type="bearer", role="seller")
    return jsonify(error="Credenciales inválidas"), 401

@application.post("/upload")
def upload():
    file = request.files.get("file")
    if not file:
        return jsonify(error="file requerido"), 400

    allowed = {"image/jpeg": ".jpg", "image/png": ".png", "image/webp": ".webp"}
    if file.mimetype not in allowed:
        return jsonify(error="Formato no permitido (JPG/PNG/WEBP)"), 400

    fname = f"{uuid.uuid4().hex}{allowed[file.mimetype]}"
    fname = secure_filename(fname)
    path = os.path.join(UPLOAD_DIR, fname)
    file.save(path)

    url = f"/static/uploads/{fname}"
    return jsonify(url=url,
                   filename=fname,
                   size=os.path.getsize(path),
                   content_type=file.mimetype), 201

@application.get("/static/uploads/<path:name>")
def serve_upload(name):
    return send_from_directory(UPLOAD_DIR, name)